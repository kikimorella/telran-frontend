package de.telran.d211103.arrayoperations;

public class HomeWorkArrayOperations {
    /*
    2. Написать метод, который принимает отсортированный массив и число, и возвращает либо реальный индекс, по
    которому находится число, либо число, равное индексу, на который можно поставить элемент, не нарушая порядка
    (сортированность), плюс 1 и число с минусом (negated).
    Пример 1: func({1, 5, 7, 12, 15}, 7) -> 2
    (есть массив, есть число, нужно вернуть номер индеска, т.е. сисло в массиве присутствует)
    Пример 2: func({1, 5, 7, 12, 15}, 6) -> -3
    (есть массив, есть число, его нужно поставить на 2 индекс, т.е. нужно вернуть номер следующего индеска со знаком минус)
    Пример 3: func({1, 5, 7, 12, 15}, 0) -> -1
    (если число не присутствует в массиве и меньше всех чисел, то 0 индекст нужно постававить на место -1,
    т.е. добавить элемент)
    пример 4: func({1, 5, 7, 12, 15}, 20) -> -6
    (если число не присутствует в массиве и больше всех чисел, то нужно добавить индекс)
    */
    public static void main(String[] args) {
        System.out.println(getIndex(new int[]{1, 5, 7, 12, 15}, 7));//2
        System.out.println(getIndex(new int[]{1, 5, 7, 12, 15}, 6));//-3
        System.out.println(getIndex(new int[]{1, 5, 7, 12, 15}, 0));//-1
        System.out.println(getIndex(new int[]{1, 5, 7, 12, 15}, 20));//-6
    }

    static int getIndex(int[] array, int number) {
        for (int i = 0; i < array.length; i++) { // перебираем массив
            if (number == array[i]) // есть ли элемент равный элементу из массива
                return i; // возвращаем его идекс

            if (number < array[i]) // если такого элемента нет, но число стало меньше текущего элемента
                return -(i + 1); // число занимает место по порядку и возвращаем следующий индекс со знаком минус
        }
        // если мы прошли весь массив и число всё ещё больше
        return -(array.length + 1); // последний индекс, куда должно встать число это array.length,
        // возвращаем следующий индекс
    }
}
