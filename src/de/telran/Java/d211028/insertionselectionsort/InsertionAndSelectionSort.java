package de.telran.d211028.insertionselectionsort;

public class InsertionAndSelectionSort {
    /*Отсортировать массив - расположить его элементы в определеноом порядке.
    например по возрастанию или убыванию.
    {45, 1, 4} -> {1, 4, 45}
    1. Сортировка вставкой (Insetion Sort)
    {14, -7, 3, 8, 11, 0}
    {-7, 14, 3, 8, 11, 0} - первый шаг сравнить первые два элемента, если нужно поменять местами
    {-7, 3, 14, 8, 11, 0} - второй шаг, сравниваем 3й элемент, до тех пор пока не встанет на нужное место
    {-7, 3, 8, 14, 11, 0} - третий шаг, двигаем 4й элемент
    {-7, 3, 8, 11, 14, 0} - все элементы на местах до 0, {-7,3,8,11,14,14} -> {-7,3,8,11,11,14} ->
                            {-7,3,8,8,11,14} -> {-7,3,3,8,11,14} в последний сравниваемый индекс мы записываем 0
    {-7, 0, 3, 8, 11, 14} - алгоритм закончен
    2. Сортировка вставкой (Selection Sort) мы вибираем минимальный элемент и ставим на 0 место
    {14, -7, 3, 8, 11, 0}
    {-7, 14, 3, 8, 11, 0} меняем местами минимал. элемет и ставим на 1е места, а 1е место двигаем на индекс минимального
    {-7, 0, 3, 8, 11, 14} проверяем есть ли минимальный
    {-7, 0, 3, 8, 11, 14} - алгоритм закончен
    */
    public static void main(String[] args) {
        int [] arrayToSort = {14, -7, 3, 8, 11, 0}; // -> 1 шаг {14, 14, 3, 8, 11, 0}
        insertionSort (arrayToSort);
        printArray(arrayToSort);
    }
    static void insertionSort(int[] array){
        for (int i = 1; i < array.length; i++) {
            int temp = array[i];
            int j = i;
            while (j > 0 && array[j - 1] > temp) { // когда упрёмся в стенку (бортик), то всё, ставим элемент на 0 место
                array[j] = array[j - 1];
                j--;
            }
            array [j] = temp;
        }
    }

    static void printArray(int[] array) { // функция, которая распечатывает массив
        for (int i = 0; i < array.length; i++) {
            System.out.print(array[i] + " ");
        }
        System.out.println();
    }
}
